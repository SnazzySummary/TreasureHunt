// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreasureHunt.Data;

#nullable disable

namespace TreasureHunt.Data.Migrations
{
    [DbContext(typeof(TreasureHuntContext))]
    partial class TreasureHuntContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TreasureHunt.Models.Hunt", b =>
                {
                    b.Property<string>("HuntId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("HuntId");

                    b.HasIndex("UserId");

                    b.ToTable("Hunts");

                    b.HasData(
                        new
                        {
                            HuntId = "efd6b2e0-eabe-4ada-b3e9-edf9769a5e2d",
                            Title = "Hunt for the Red October",
                            UserId = "4584fd0c-ee67-434c-ab06-9318f5367e3a"
                        },
                        new
                        {
                            HuntId = "d1a9c4f0-d6bb-4c14-9867-be76b40b91e5",
                            Title = "Hunt for the Orange October",
                            UserId = "944b8464-3c10-4e45-b29a-e44ff0a727af"
                        });
                });

            modelBuilder.Entity("TreasureHunt.Models.HuntObject", b =>
                {
                    b.Property<string>("HuntObjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Coordinates")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DefaultVisible")
                        .HasColumnType("bit");

                    b.Property<string>("HuntId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("HuntObjectId");

                    b.HasIndex("HuntId");

                    b.ToTable("HuntObjects");

                    b.HasData(
                        new
                        {
                            HuntObjectId = "6aeadcbd-5c29-4bba-b930-071de9bf45fa",
                            Coordinates = "Blah",
                            DefaultVisible = true,
                            HuntId = "efd6b2e0-eabe-4ada-b3e9-edf9769a5e2d",
                            Order = 0,
                            Text = "Here we go this is a secret place",
                            Title = "Secret Location 1",
                            Type = 0,
                            Visible = true
                        },
                        new
                        {
                            HuntObjectId = "b2ba30b2-9d90-412a-9a8f-3077853d32a3",
                            Coordinates = "Blah",
                            DefaultVisible = false,
                            HuntId = "efd6b2e0-eabe-4ada-b3e9-edf9769a5e2d",
                            Order = 1,
                            Text = "Here we go this is a secret place",
                            Title = "Secret Location 2",
                            Type = 0,
                            Visible = false
                        });
                });

            modelBuilder.Entity("TreasureHunt.Models.Lock", b =>
                {
                    b.Property<string>("LockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HuntObjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Locked")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("LockId");

                    b.HasIndex("HuntObjectId");

                    b.ToTable("Locks");

                    b.HasData(
                        new
                        {
                            LockId = "8dc6966d-ee79-4447-84ff-63b46f8bd6f9",
                            HuntObjectId = "6aeadcbd-5c29-4bba-b930-071de9bf45fa",
                            Locked = true,
                            Order = 0,
                            Type = 0
                        });
                });

            modelBuilder.Entity("TreasureHunt.Models.Participant", b =>
                {
                    b.Property<string>("ParticipantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<string>("HuntId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ParticipantId");

                    b.HasIndex("HuntId");

                    b.HasIndex("UserId");

                    b.ToTable("Participants");

                    b.HasData(
                        new
                        {
                            ParticipantId = "38d3cf87-ef76-446f-931b-ebc6c99f338c",
                            Accepted = false,
                            HuntId = "efd6b2e0-eabe-4ada-b3e9-edf9769a5e2d",
                            UserId = "944b8464-3c10-4e45-b29a-e44ff0a727af"
                        },
                        new
                        {
                            ParticipantId = "4a01d2ca-5fdb-4f4a-b59f-d412d91d6b9d",
                            Accepted = false,
                            HuntId = "d1a9c4f0-d6bb-4c14-9867-be76b40b91e5",
                            UserId = "4584fd0c-ee67-434c-ab06-9318f5367e3a"
                        });
                });

            modelBuilder.Entity("TreasureHunt.Models.Question", b =>
                {
                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Answered")
                        .HasColumnType("bit");

                    b.Property<string>("Hint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LockId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("LockId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = "e3f847d0-477c-47db-b9fc-e764d1f1c76f",
                            Answer = "Red",
                            Answered = false,
                            Hint = "The answer is Red",
                            LockId = "8dc6966d-ee79-4447-84ff-63b46f8bd6f9",
                            Order = 0,
                            Text = "What color is Red?",
                            Type = 0
                        });
                });

            modelBuilder.Entity("TreasureHunt.Models.UnlockAction", b =>
                {
                    b.Property<string>("UnlockActionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HuntObjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LockId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UnlockActionId");

                    b.HasIndex("HuntObjectId");

                    b.HasIndex("LockId");

                    b.ToTable("UnlockActions");

                    b.HasData(
                        new
                        {
                            UnlockActionId = "f183705c-6682-4df0-a865-d76a8f7e925e",
                            HuntObjectId = "b2ba30b2-9d90-412a-9a8f-3077853d32a3",
                            LockId = "8dc6966d-ee79-4447-84ff-63b46f8bd6f9"
                        });
                });

            modelBuilder.Entity("TreasureHunt.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "4584fd0c-ee67-434c-ab06-9318f5367e3a",
                            Email = "xxxx@example.com",
                            FirstName = "Robert",
                            LastName = "Roe",
                            Password = "1234",
                            Username = "Snazzy101"
                        },
                        new
                        {
                            UserId = "944b8464-3c10-4e45-b29a-e44ff0a727af",
                            Email = "xxxx@example.com",
                            FirstName = "Jakki",
                            LastName = "Crampton",
                            Password = "1234",
                            Username = "PsychoRedHead16"
                        });
                });

            modelBuilder.Entity("TreasureHunt.Models.Hunt", b =>
                {
                    b.HasOne("TreasureHunt.Models.User", "User")
                        .WithMany("Hunts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TreasureHunt.Models.HuntObject", b =>
                {
                    b.HasOne("TreasureHunt.Models.Hunt", "Hunt")
                        .WithMany("HuntObjects")
                        .HasForeignKey("HuntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hunt");
                });

            modelBuilder.Entity("TreasureHunt.Models.Lock", b =>
                {
                    b.HasOne("TreasureHunt.Models.HuntObject", "HuntObject")
                        .WithMany("Locks")
                        .HasForeignKey("HuntObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HuntObject");
                });

            modelBuilder.Entity("TreasureHunt.Models.Participant", b =>
                {
                    b.HasOne("TreasureHunt.Models.Hunt", "Hunt")
                        .WithMany("Participants")
                        .HasForeignKey("HuntId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TreasureHunt.Models.User", "User")
                        .WithMany("Participants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Hunt");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TreasureHunt.Models.Question", b =>
                {
                    b.HasOne("TreasureHunt.Models.Lock", "Lock")
                        .WithMany("Questions")
                        .HasForeignKey("LockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lock");
                });

            modelBuilder.Entity("TreasureHunt.Models.UnlockAction", b =>
                {
                    b.HasOne("TreasureHunt.Models.HuntObject", "HuntObject")
                        .WithMany("UnlockActions")
                        .HasForeignKey("HuntObjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TreasureHunt.Models.Lock", "Lock")
                        .WithMany("UnlockActions")
                        .HasForeignKey("LockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HuntObject");

                    b.Navigation("Lock");
                });

            modelBuilder.Entity("TreasureHunt.Models.Hunt", b =>
                {
                    b.Navigation("HuntObjects");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("TreasureHunt.Models.HuntObject", b =>
                {
                    b.Navigation("Locks");

                    b.Navigation("UnlockActions");
                });

            modelBuilder.Entity("TreasureHunt.Models.Lock", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("UnlockActions");
                });

            modelBuilder.Entity("TreasureHunt.Models.User", b =>
                {
                    b.Navigation("Hunts");

                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
